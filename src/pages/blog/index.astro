---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Body from '../../components/Body.astro';
import Content from '../../components/Content.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import FormattedDate from '../../components/FormattedDate.astro';
import { getCollection } from 'astro:content';

const blogs = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<Body>
		<Header />
		<main class="pt-4 sm:pt-[64px]">
      <Content className="mb-6 px-4">
        <section>
          <div class="flex items-center gap-2">
            <h2 class="text-3xl font-semibold">All blog posts</h2>
            <a class="hover:text-orange-500 p-1 border-2 border-zinc-700 rounded-md" href="/blog/rss.xml">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 1792 1792" fill="currentColor"><path d="M576 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm512 123q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zm512 2q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z"/></svg>
            </a>
          </div>
          <hr class="border-top border-zinc-400 my-4"/>
          <ul class="grid grid-cols-1">
            {
              blogs.map((blog: any) => (
                <li class="relative flex gap-6 text-left pb-4">
                  <div class="border-l-2 border-orange-300 h-full w-1"></div>
                  <div class="flex flex-col">
                    <FormattedDate className="text-sm opacity-70 mb-2" date={blog.data.pubDate} />
                    <a href=`/blog/${blog.slug}` class="mb-1">
                      <div class="flex flex-row gap-4">
                        <div>
                          <div class="text-xl hover:text-orange-600 dark:hover:text-orange-300">{blog.data.title}</div>
                        </div>
                      </div>
                    </a>
                    <div class="mb-1 text-lg flex gap-2">{
                      blog.data.tags.map((tag: string) => (
                        <a href=`/tags/${tag}`>
                          <div class="underline rounded-md font-mono text-sm opacity-90"><code>#{tag}</code></div>
                        </a>
                      ))
                    }</div>
                  </div>
                </li>
              ))
            }
          </ul>
        </section>
      </Content>
		</main>
		<Footer />
	</Body>
</html>
